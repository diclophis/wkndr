apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
    labels:
      app: wkndr
    name: wkndr
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: wkndr
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: wkndr
      spec:
        containers:
        - command:
          - /var/lib/wkndr/release/wkndr.mruby.x11
          - --server=/var/lib/wkndr/public
          - --no-client
          image: wkndr:latest
          imagePullPolicy: IfNotPresent
          name: wkndr
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: 50m
              memory: 100M
            requests:
              cpu: 10m
              memory: 100M
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/tmp/chroot/home
            name: chroot-home
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/tmp/chroot-home
            type: DirectoryOrCreate
          name: chroot-home
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    name: wkndr-service
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: app
      nodePort: 31041
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app: wkndr
    sessionAffinity: None
    type: NodePort
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.class: wkndr
    name: wkndr-computer-vhost
  spec:
    rules:
    - host: wkndr.computer
      http:
        paths:
        - backend:
            serviceName: wkndr-service
            servicePort: 8000
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
