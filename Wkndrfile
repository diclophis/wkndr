#

include ECS

Wkndr.nonce {
  Wkndr.client_side { |gl|
    @store = StorageManager.new
    @transformer = TransformerSystem.new(@store)
    @exhaust = ExhaustSystem.new(@store, 0.05, @particleBitmap, @particleLayer)
    @movement = MovementSystem.new(@store)
    @exhaust_layer = @store.watch(ExhaustComponent, PositionComponent, RandomColorComponent)
    @hunter_layer = @store.watch(HunterComponent, PositionComponent, RandomColorComponent)
    @last_l = 0

    gl.open_default_view!
  }
}

Wkndr.client_side { |gl|
  gl.update { |global_time, delta_time|
    gl.drawmode {
      gl.twod {
        @transformer.process(global_time, delta_time)
        @exhaust.process(global_time, delta_time)
        @movement.process(global_time, delta_time)

        gl.mousep { |xyl|
          x, y, l = *xyl

          if (l == 1 && @last_l == 0)
            1.times {
              @store.add(
                HunterComponent.new,
                PositionComponent.new(x, y, 0),
                VelocityComponent.from_angle(rand * 2.0 * 3.14).mul(200.0),
                SpriteComponent.new,
                TransformComponent.new(0.75),
                RandomColorComponent.new
              )
            }
          end

          @last_l = l
        }

        @exhaust_layer.each { |e, _x, p, c|
          gl.draw_circle(10.0, p.x, p.y, p.z, *c.color)
        }

        @hunter_layer.each { |e, _h, p, c|
          gl.draw_circle(20.0, p.x, p.y, p.z, *c.color)
        }

        gl.button(15.0, 15.0, 50.0, 20.0, "  #{@store.things.length} #{"%0.2f" % (1.0 / delta_time)} fps  ") {
          @store.reset!
        }
      }
    }
  }
}


Wkndr.server_side { |server|
  server.wsb("/") do |cn, phr|
  end

  server.raw("/status") do |cn, phr|
    "OK\n"
  end
}
