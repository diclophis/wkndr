# vi:syntax=ruby

@one_position = [0.0, 1.0]
@two_position = [-5.0, -5.0]
@three_position = [5.0, 5.0]

@one_target = [0.0, 0.0]
@two_target = [0.0, 0.0]
@three_target = [0.0, 0.0]

def centroid(coords)
  x_sum = 0
  y_sum = 0
  len = 0

  coords.each do |coord|
    x_sum += coord[0]
    y_sum += coord[1]
    len += 1
  end

  rx = x_sum / len
  ry = y_sum / len

  return [rx, ry]
end

xloop(:a) { |delta_time|
  loop do
    delta_time = xleap(7)
    @one_target = [(rand * 50.0) - 25.0, (rand * 50.0) - 25.0]
  end
}

xloop(:b) { |delta_time|
  loop do
    delta_time = xleap(5)
    @two_target = [(rand * 50.0) - 25.0, (rand * 50.0) - 25.0]
  end
}

xloop(:c) { |delta_time|
  loop do
    delta_time = xleap(1)
    @three_target = centroid([@one_position, @two_position])
  end
}

Wkndr.nonce("main") {
  $ticks = 0

  Wkndr.client_side("main") { |gl|
    gl.open_default_view!
  }
}

$speed = 64.0

Wkndr.client_side("main") { |gl|
  a = Cube.new(gl, 11.0, 7.0, 5.0, 1.0)
  b = Cube.new(gl, 11.0, 7.0, 5.0, 1.0)
  c = Cube.new(gl, 11.0, 7.0, 5.0, 1.0)

  frame_count = 0
  running_average = 0.0

  gl.update("main") { |global_time, delta_time, sw, sh|
    fiberz(global_time)

    @one_position[0] -= (@one_position[0] - @one_target[0]) * 0.7 * delta_time
    @one_position[1] -= (@one_position[1] - @one_target[1]) * 0.7 * delta_time

    @two_position[0] -= (@two_position[0] - @two_target[0]) * 0.7 * delta_time
    @two_position[1] -= (@two_position[1] - @two_target[1]) * 0.7 * delta_time

    @three_position[0] -= (@three_position[0] - @three_target[0]) * 0.7 * delta_time
    @three_position[1] -= (@three_position[1] - @three_target[1]) * 0.7 * delta_time

    a.deltap(@one_position[0], @one_position[1], 0.0)
    b.deltap(@two_position[0], @two_position[1], 0.0)
    c.deltap(@three_position[0], @three_position[1], 0.0)

    gl.drawmode {
      gl.threed {
        gl.lookat(1, 0.0, 0.0, 100.0, 0.0, 0.1, 0.0, 50.0)

        a.draw(false)
        b.draw(false)
        c.draw(false)
      }

      gl.twod {
        frame_count += 1
        running_average += delta_time
        fps = (1.0 / (running_average / frame_count.to_f))
        gl.label("%3.3f %3.3f %3.3f %d" % [delta_time, global_time, fps, frame_count])
      }
    }
  }
}


Wkndr.server_side("main") { |gl, server|
  server.wsb("/") do |cn, phr|
  end

  server.raw("/status") do |cn, phr|
    Protocol.ok("ONLINE\n") #TODO: present SHA1 of existing code somehow?????
  end

  server.raw("/about") do |cn, phr|
    mab = Markaby::Builder.new
    mab.html5 "lang" => "en" do
      mab.head do
        mab.title "about"
      end

      mab.body do
        mab.h1 "what is wkndr"
        mab.p "it is a new hypertext application platform"
        mab.a "href" => "/" do
          "//////"
        end
      end
    end
    Protocol.ok(mab.to_s)
  end
}


#Wkndr.client_side("foo") { |gl|
#  gl.update("foo") { |global_time, delta_time, sw, sh|
#    $radius = ((10.0) + (1.0 + Math.sin(global_time * 1.0) * 5.0))
#  }
#}
